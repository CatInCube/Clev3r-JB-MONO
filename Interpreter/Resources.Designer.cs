//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interpreter {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Interpreter.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 00 ERROR
        ///01 NOP
        ///02 PROGRAM_STOP        16
        ///03 PROGRAM_START       16 32 32 8
        ///04 OBJECT_STOP         T
        ///05 OBJECT_START        T
        ///06 OBJECT_TRIG         T
        ///07 OBJECT_WAIT         T
        ///08 RETURN
        ///// 09 CALL            
        ///0A OBJECT_END          
        ///0B SLEEP
        ///
        ///0C00 PROGRAM_INFO OBJ_STOP       16 16
        ///0C04 PROGRAM_INFO OBJ_START      16 16
        ///0C16 PROGRAM_INFO GET_STATUS     16 8*
        ///0C17 PROGRAM_INFO GET_SPEED      16 32*
        ///0C18 PROGRAM_INFO GET_PRGRESULT  16 8*
        ///// 0C19 PROGRAM_INFO SET_INSTR      
        ///
        ///0D LABEL        [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string bytecodelist {
            get {
                return ResourceManager.GetString("bytecodelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // -------------------------------------- EXTENSION MODULE: ASSERT -----------------------------------
        ///
        ///subcall ASSERT.FAILED     // SV         TEXT.GETSUBTEXT TEXT.GETSUBTEXTTOEND
        ///{
        ///	IN_S message 252
        ///	
        ///	UI_DRAW CLEAN
        ///	UI_DRAW SELECT_FONT 1
        ///	UI_DRAW TEXT 1 0 16 &apos;ASSERT FAILED&apos;
        ///
        ///	DATA16 y
        ///	MOVE16_16 32 y
        ///	
        ///linesloop:
        ///	DATA16 len	
        ///	STRINGS GET_SIZE message len
        ///	JR_LTEQ16 len 22 lastline
        ///	
        ///	DATAS oneline 252
        ///	CALL TEXT.GETSUBTEXT message 1.0 22.0 oneline
        ///	UI_DRAW TEXT 1 0 y oneline
        ///	ADD16  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Assert {
            get {
                return ResourceManager.GetString("c_Assert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motors	Binary Bit Field	Base-10 Integer
        /// 
        ///A only			0001			1
        ///B only			0010			2
        ///C only			0100			4
        ///D only			1000			8
        ///A and B			0011			3
        ///A and C			0101			5
        ///A and D			1001			9
        ///B and C			0110			6
        ///B and D			1010			10
        ///C and D			1100			12
        ///A, B and C		0111			7
        ///A, B and D		1011			11
        ///A, C and D		1101			13
        ///B, C and D		1110			14
        ///A, B, C and D	1111			15.
        /// </summary>
        internal static string c_BitMask {
            get {
                return ResourceManager.GetString("c_BitMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: BUTTONS -------------------------------------------------
        ///
        ///subcall BUTTONS.CURRENT    // S
        ///{
        ///	OUT_S result 8
        ///	DATA8 ispressed
        ///	
        ///// BIG CASE TREE TO GET ALL POSSIBILITIES
        ///
        ///	UI_BUTTON PRESSED 1 ispressed
        ///	JR_NEQ8 ispressed 0 is_1____
        ///is_X____:
        ///	UI_BUTTON PRESSED 2 ispressed
        ///	JR_NEQ8 ispressed 0 is_X2___
        ///is_XX___:
        ///	UI_BUTTON PRESSED 3 ispressed
        ///	JR_NEQ8 ispressed 0 is_XX3__
        ///is_XXX__:
        ///	UI_BUTTON PRESSED 4 ispressed
        ///	JR_NEQ8 ispressed 0 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Buttons {
            get {
                return ResourceManager.GetString("c_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: BYTE -------------------------------------------------
        ///
        ///subcall BYTE.NOT   // FF
        ///{
        ///	IN_F value
        ///	OUT_F result
        ///	
        ///	DATA16 value_16
        ///	MOVEF_16 value value_16
        ///
        ///	XOR16 value_16 255 value_16
        ///	AND16 value_16 255 value_16
        ///	MOVE16_F value_16 result
        ///}
        ///
        ///subcall BYTE.AND_    // FFF
        ///{
        ///	IN_F value1
        ///	IN_F value2
        ///	OUT_F result
        ///
        ///	DATA16 value1_16
        ///	DATA16 value2_16
        ///	MOVEF_16 value1 value1_16
        ///	MOVEF_16 value2 value2_16
        ///
        ///	AND16 value1_16 value2_1 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Byte {
            get {
                return ResourceManager.GetString("c_Byte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: EV3 -------------------------------------------------
        ///
        ///DATA16 FD_NATIVECODECOMMAND
        ///DATA16 FD_NATIVECODERESPONSE
        ///
        ///
        ///subcall EV3.SETLEDCOLOR    // SSV
        ///{
        ///	IN_S color 8		// only receive first 7 characters
        ///	IN_S effect 8       // only receive first 7 characters
        ///	
        ///	ARRAY8 color_1 4	// split up to be able to do some operations with 4 bytes each
        ///	ARRAY8 color_2 4
        ///	ARRAY8 effect_1 4
        ///	ARRAY8 effect_2 4
        ///
        ///	STRINGS DUPLICATE color color_1
        ///	STRINGS [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_EV3 {
            get {
                return ResourceManager.GetString("c_EV3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: EV3FILE --------------------------------------------
        ///
        ///subcall EV3FILE.OPENWRITE       // SF
        ///{
        ///	IN_S filename 252
        ///	OUT_F handle
        ///
        ///	DATAS fullname 300
        ///	DATA16 handle16
        ///
        ///	STRINGS DUPLICATE filename fullname
        ///	JR_EQ8 filename 47 absolutepath               // filename begins with a &apos;/&apos;
        ///	STRINGS ADD &apos;/home/root/lms2012/prjs/&apos; filename fullname
        ///absolutepath:
        ///	FILE OPEN_WRITE fullname handle16
        ///
        ///	MOVE16_F handle16 handle
        ///}
        ///
        ///subcall EV3FILE.OP [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_EV3File {
            get {
                return ResourceManager.GetString("c_EV3File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: LCD -------------------------------------------------
        ///
        ///DATA32 STOPLCDUPDATE
        ///
        ///init
        ///{
        ///	MOVE32_32 0 STOPLCDUPDATE
        ///}
        ///
        ///inline LCD.STOPUPDATE    // V
        ///{
        ///	MOVE32_32 1 STOPLCDUPDATE
        ///}
        ///
        ///inline LCD.UPDATE  // V
        ///{
        ///	MOVE32_32 0 STOPLCDUPDATE
        ///	UI_DRAW UPDATE
        ///}
        ///
        ///subcall LCD.CLEAR   // V
        ///{
        ///	UI_DRAW(TOPLINE,0)
        ///	UI_DRAW(CLEAN)
        ///	
        ///	JR_NEQ32 0 STOPLCDUPDATE skipupdate
        ///	UI_DRAW UPDATE
        ///skipupdate:
        ///}
        ///
        ///subcall LCD.RECT      // FFFFFV
        ///{
        ///	IN_F c [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_LCD {
            get {
                return ResourceManager.GetString("c_LCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: Mailbox -------------------------------------------------
        ///
        ///DATA32 NUMMAILBOXES
        ///
        ///init
        ///{
        ///	MOVE32_32 0 NUMMAILBOXES
        ///}
        ///
        ///
        ///subcall MAILBOX.CREATE        // SF
        ///{
        ///	IN_S boxname 252
        ///	OUT_F id
        ///
        ///	JR_GTEQ32 NUMMAILBOXES 30 toomanyboxes
        ///
        ///	DATA8 id8
        ///	MOVE32_F NUMMAILBOXES id
        ///	MOVE32_8 NUMMAILBOXES id8
        ///	ADD32 NUMMAILBOXES 1 NUMMAILBOXES
        ///	MAILBOX_OPEN id8 boxname 4 0 0 
        ///	RETURN
        ///
        /// toomanyboxes:
        ///	MOVEF_F -1.0 id
        ///	RETURN	
        ///}
        ///        
        ///
        ///subca [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Mailbox {
            get {
                return ResourceManager.GetString("c_Mailbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ---------------------------------------- BASIC MODULE: MATH ---------------------------------------
        ///
        ///inline MATH.PI              // F
        ///{
        ///	MOVEF_F 3.1415926535897932384 :0
        ///}
        ///
        ///inline MATH.ABS             // FF
        ///{
        ///	MATH ABS :0 :1
        ///}
        ///inline MATH.ARCCOS          // FF
        ///{
        ///	DATAF tmpf:#
        ///	MATH ACOS :0 tmpf:#
        ///	DIVF tmpf:# 57.295779513082 :1
        ///}
        ///inline MATH.ARCSIN          // FF
        ///{
        ///	DATAF tmpf:#
        ///	MATH ASIN :0 tmpf:#
        ///	DIVF tmpf:# 57.295779513082 :1
        ///}
        ///inline MATH.ARCTAN          // FF
        ///{
        ///	DATAF tmpf [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Math {
            get {
                return ResourceManager.GetString("c_Math", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTOR ----------------------------------------------
        ///
        ///// 4 flags for each daisy-chaining layer
        ///ARRAY8 MOTORISINVERTED 4     
        ///// lookup table to quickly mask out the lower-bit of two bits
        ///ARRAY8 FIRSTOF2  16
        ///
        ///init
        ///{
        ///	OUTPUT_RESET 0 15
        ///
        ///	WRITE8 0 0 MOTORISINVERTED
        ///	WRITE8 0 1 MOTORISINVERTED
        ///	WRITE8 0 2 MOTORISINVERTED
        ///	WRITE8 0 3 MOTORISINVERTED
        ///	WRITE8 0 0 FIRSTOF2
        ///	WRITE8 0 1 FIRSTOF2
        ///	WRITE8 0 2 FIRSTOF2
        ///	WRITE8 1 3 FIRSTOF2
        ///	WRI [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Motor {
            get {
                return ResourceManager.GetString("c_Motor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORA ----------------------------------------------
        ///
        ///DATA32 getTachoA
        ///DATA32 tmpTachoA
        ///DATA8 getSpeedA
        ///DATA8 setSpeedA
        ///DATA8 setPowerA
        ///
        ///inline MOTORA.GETTACHO    // F
        ///{
        ///	OUTPUT_GET_COUNT 0 0 getTachoA
        ///	MOVE32_F getTachoA :0
        ///}
        ///
        ///inline MOTORA.GETSPEED    // F
        ///{
        ///	OUTPUT_READ 0 0 getSpeedA tmpTachoA
        ///	MOVE8_F getSpeedA :0
        ///}
        ///
        ///inline MOTORA.RESETCOUNT // V
        ///{
        ///	OUTPUT_CLR_COUNT 0 1
        ///}
        ///
        ///inline MOTORA.SETDIRECTPOLARITY // V
        ///{
        ///	OUTPUT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorA {
            get {
                return ResourceManager.GetString("c_MotorA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORAB ----------------------------------------------
        ///
        ///inline MOTORAB.OFF // V
        ///{
        ///	OUTPUT_POWER 0 3 0
        ///	OUTPUT_STOP 0 3 0
        ///}
        ///
        ///inline MOTORAB.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 3 0
        ///	OUTPUT_STOP 0 3 1
        ///}
        ///
        ///inline MOTORAB.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedA
        ///	OUTPUT_SPEED 0 3 setSpeedA
        ///}
        ///
        ///inline MOTORAB.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerA
        ///	OUTPUT_POWER 0 3 setPowerA
        ///}
        ///
        ///inline MOTORAB.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 se [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorAB {
            get {
                return ResourceManager.GetString("c_MotorAB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORAC ----------------------------------------------
        ///
        ///inline MOTORAC.OFF // V
        ///{
        ///	OUTPUT_POWER 0 5 0
        ///	OUTPUT_STOP 0 5 0
        ///}
        ///
        ///inline MOTORAC.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 5 0
        ///	OUTPUT_STOP 0 5 1
        ///}
        ///
        ///inline MOTORAC.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedA
        ///	OUTPUT_SPEED 0 5 setSpeedA
        ///
        ///inline MOTORAC.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerA
        ///	OUTPUT_POWER 0 5 setPowerA
        ///}
        ///
        ///inline MOTORAC.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSp [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorAC {
            get {
                return ResourceManager.GetString("c_MotorAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORAD ----------------------------------------------
        ///
        ///inline MOTORAD.OFF // V
        ///{
        ///	OUTPUT_POWER 0 9 0
        ///	OUTPUT_STOP 0 9 0
        ///}
        ///
        ///inline MOTORAD.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 9 0
        ///	OUTPUT_STOP 0 9 1
        ///}
        ///
        ///inline MOTORAD.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedA
        ///	OUTPUT_SPEED 0 9 setSpeedA
        ///
        ///inline MOTORAD.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerA
        ///	OUTPUT_POWER 0 9 setPowerA
        ///}
        ///
        ///inline MOTORAD.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSp [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorAD {
            get {
                return ResourceManager.GetString("c_MotorAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORB ----------------------------------------------
        ///
        ///DATA32 getTachoB
        ///DATA32 tmpTachoB
        ///DATA8 getSpeedB
        ///DATA8 setSpeedB
        ///DATA8 setPowerB
        ///
        ///inline MOTORB.GETTACHO    // F
        ///{
        ///	OUTPUT_GET_COUNT 0 1 getTachoB
        ///	MOVE32_F getTachoB :0
        ///}
        ///
        ///inline MOTORB.GETSPEED    // F
        ///{
        ///	OUTPUT_READ 0 1 getSpeedB tmpTachoB
        ///	MOVE8_F getSpeedB :0
        ///}
        ///
        ///inline MOTORB.RESETCOUNT // V
        ///{
        ///	OUTPUT_CLR_COUNT 0 2
        ///}
        ///
        ///inline MOTORB.SETDIRECTPOLARITY // V
        ///{
        ///	OUTPUT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorB {
            get {
                return ResourceManager.GetString("c_MotorB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORBC ----------------------------------------------
        ///
        ///inline MOTORBC.OFF // V
        ///{
        ///	OUTPUT_POWER 0 6 0
        ///	OUTPUT_STOP 0 6 0
        ///}
        ///
        ///inline MOTORBC.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 6 0
        ///	OUTPUT_STOP 0 6 1
        ///}
        ///
        ///inline MOTORBC.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedB
        ///	OUTPUT_SPEED 0 6 setSpeedB
        ///
        ///inline MOTORBC.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerB
        ///	OUTPUT_POWER 0 6 setPowerB
        ///}
        ///
        ///inline MOTORBC.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSp [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorBC {
            get {
                return ResourceManager.GetString("c_MotorBC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORBD ----------------------------------------------
        ///
        ///inline MOTORBD.OFF // V
        ///{
        ///	OUTPUT_POWER 0 10 0
        ///	OUTPUT_STOP 0 10 0
        ///}
        ///
        ///inline MOTORBD.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 10 0
        ///	OUTPUT_STOP 0 10 1
        ///}
        ///
        ///inline MOTORBD.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedB
        ///	OUTPUT_SPEED 0 10 setSpeedB
        ///
        ///inline MOTORBD.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerB
        ///	OUTPUT_POWER 0 10 setPowerB
        ///}
        ///
        ///inline MOTORBD.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorBD {
            get {
                return ResourceManager.GetString("c_MotorBD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORC ----------------------------------------------
        ///
        ///DATA32 getTachoC
        ///DATA32 tmpTachoC
        ///DATA8 getSpeedC
        ///DATA8 setSpeedC
        ///DATA8 setPowerC
        ///
        ///inline MOTORC.GETTACHO    // F
        ///{
        ///	OUTPUT_GET_COUNT 0 2 getTachoC
        ///	MOVE32_F getTachoC :0
        ///}
        ///
        ///inline MOTORC.GETSPEED    // F
        ///{
        ///	OUTPUT_READ 0 2 getSpeedC tmpTachoC
        ///	MOVE8_F getSpeedC :0
        ///}
        ///
        ///inline MOTORC.RESETCOUNT // V
        ///{
        ///	OUTPUT_CLR_COUNT 0 4
        ///}
        ///
        ///inline MOTORC.SETDIRECTPOLARITY // V
        ///{
        ///	OUTPUT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorC {
            get {
                return ResourceManager.GetString("c_MotorC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORCD ----------------------------------------------
        ///
        ///inline MOTORCD.OFF // V
        ///{
        ///	OUTPUT_POWER 0 10 0
        ///	OUTPUT_STOP 0 10 0
        ///}
        ///
        ///inline MOTORCD.OFFANDBRAKE // V
        ///{
        ///	OUTPUT_POWER 0 10 0
        ///	OUTPUT_STOP 0 10 1
        ///}
        ///
        ///inline MOTORCD.SETSPEED    // FV
        ///{
        ///	MOVEF_8 :0 setSpeedC
        ///	OUTPUT_SPEED 0 12 setSpeedC
        ///
        ///inline MOTORCD.SETPOWER   // FV
        ///{
        ///	MOVEF_8 :0 setPowerC
        ///	OUTPUT_POWER 0 12 setPowerC
        ///}
        ///
        ///inline MOTORCD.STARTSPEED    // FV
        ///{
        ///	MOVEF_8 :0 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorCD {
            get {
                return ResourceManager.GetString("c_MotorCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: MOTORD ----------------------------------------------
        ///
        ///DATA32 getTachoD
        ///DATA32 tmpTachoD
        ///DATA8 getSpeedD
        ///DATA8 setSpeedD
        ///DATA8 setPowerD
        ///
        ///inline MOTORD.GETTACHO    // F
        ///{
        ///	OUTPUT_GET_COUNT 0 3 getTachoD
        ///	MOVE32_F getTachoD :0
        ///}
        ///
        ///inline MOTORD.GETSPEED    // F
        ///{
        ///	OUTPUT_READ 0 3 getSpeedD tmpTachoD
        ///	MOVE8_F getSpeedD :0
        ///}
        ///
        ///inline MOTORD.RESETCOUNT // V
        ///{
        ///	OUTPUT_CLR_COUNT 0 8
        ///}
        ///
        ///inline MOTORD.SETDIRECTPOLARITY // V
        ///{
        ///	OUTPUT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_MotorD {
            get {
                return ResourceManager.GetString("c_MotorD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую наостаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_NativeCode {
            get {
                return ResourceManager.GetString("c_NativeCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ BASIC MODULE: PROGRAM -------------------------------------------------
        ///
        ///subcall PROGRAM.ARGUMENTCOUNT  // F
        ///{
        ///	OUT_F result
        ///	MOVE8_F 0 result
        ///}
        ///
        ///subcall PROGRAM.DIRECTORY  // S
        ///{
        ///	OUT_S result 128
        ///	FILENAME(GET_FOLDERNAME,127,result)
        ///}
        ///
        ///subcall PROGRAM.GETARGUMENT  // FS
        ///{
        ///	IN_F index
        ///	OUT_S result 8
        ///	STRINGS DUPLICATE &apos;&apos; result
        ///}
        ///
        ///
        ///inline PROGRAM.DELAY    // FV
        ///{
        ///	DATA32 milliseconds:#
        ///	MOVEF_32 :0 milliseconds:#
        ///	DATA32 timer:#
        ///	TIM [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Program {
            get {
                return ResourceManager.GetString("c_Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: ROW -----------------------------------------------
        ///DATA16 newArray1d
        ///DATA32 newSize1d
        ///DATA32 newIndex1d
        ///
        ///inline ROW.INIT    // FFF
        ///{
        ///	MOVEF_32 :0 newSize1d
        ///	ARRAY CREATEF newSize1d newArray1d
        ///	ARRAY FILL newArray1d :1
        ///	MOVE16_F newArray1d :2
        ///}
        ///
        ///inline ROW.DELETE // FV
        ///{
        ///	MOVEF_16 :0 newArray1d
        ///	ARRAY DELETE newArray1d
        ///}
        ///
        ///inline ROW.READ // FFF
        ///{
        ///	MOVEF_16 :0 newArray1d
        ///	MOVEF_32 :1 newIndex1d
        ///	ARRAY_READ newArray1d newIndex1d  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Row {
            get {
                return ResourceManager.GetString("c_Row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 
        ///
        ///subcall EQ_STRING       // SSS
        ///{
        ///	IN_S  a 252
        ///	IN_S  b 252
        ///	OUT_S result 8
        ///	
        ///	DATA8 flag
        ///	
        ///	// check if completely equal
        ///	STRINGS COMPARE a b flag
        ///	JR_NEQ8 FLAG 0 isequal
        ///	// second chance: when both values are &quot;True&quot; in any casing, this also counts as equal
        ///	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
        ///    STRINGS COMPARE a &apos;TRUE&apos; flag	
        ///	JR_EQ8 0,flag,isnotequal
        ///	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
        ///   [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_runtimelibrary {
            get {
                return ResourceManager.GetString("c_runtimelibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // -------------------------------------------------- EV3 MODULE: SENSOR -----------------------------------
        ///
        ///init
        ///{
        ///	INPUT_DEVICE CLR_ALL -1
        ///}
        ///
        ///subcall SENSOR.GETNAME		// FS
        ///{
        ///	IN_F port
        ///	OUT_S result 32
        ///	
        ///	DATA8 layer
        ///	DATA8 no
        ///	
        ///	MOVEF_8 port no
        ///	SUB8 no 1 no
        ///	DIV8 no 4 layer
        ///	MATH MOD8 no 4 no
        ///	
        ///	INPUT_DEVICE GET_NAME layer no 32 result
        ///	STRINGS STRIP result result
        ///}
        ///
        ///subcall SENSOR.GETTYPE		// FF
        ///{
        ///	IN_F port
        ///	OUT_F result
        ///	
        ///	DATA8 layer
        ///	DATA8 no
        ///	DATA8 type
        ///	DATA8 mode [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Sensor {
            get {
                return ResourceManager.GetString("c_Sensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: SENSOR1 ----------------------------------------------
        ///
        ///DATA32 s1out1
        ///DATA32 s1out2
        ///DATA32 s1out3
        ///
        ///init
        ///{
        ///	MOVE32_32 0 s1out1
        ///	MOVE32_32 0 s1out2
        ///	MOVE32_32 0 s1out3
        ///}
        ///
        ///inline SENSOR1.RAW1    // F
        ///{
        ///	INPUT_READEXT 0 0 0 -1 18 1 s1out1
        ///	MOVE32_F s1out1 :0
        ///}
        ///
        ///inline SENSOR1.RAW3    // FFFV
        ///{
        ///	INPUT_READEXT 0 0 0 -1 18 3 s1out1 s1out2 s1out3
        ///	MOVE32_F s1out1 :0
        ///	MOVE32_F s1out2 :1
        ///	MOVE32_F s1out3 :2
        ///}.
        /// </summary>
        internal static string c_Sensor1 {
            get {
                return ResourceManager.GetString("c_Sensor1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: SENSOR2 ----------------------------------------------
        ///
        ///DATA32 s2out1
        ///DATA32 s2out2
        ///DATA32 s2out3
        ///
        ///init
        ///{
        ///	MOVE32_32 0 s2out1
        ///	MOVE32_32 0 s2out2
        ///	MOVE32_32 0 s2out3
        ///}
        ///
        ///inline SENSOR2.RAW1    // F
        ///{
        ///	INPUT_READEXT 0 1 0 -1 18 1 s2out1
        ///	MOVE32_F s2out1 :0
        ///}
        ///
        ///inline SENSOR2.RAW3    // FFFV
        ///{
        ///	INPUT_READEXT 0 1 0 -1 18 3 s2out1 s2out2 s2out3
        ///	MOVE32_F s2out1 :0
        ///	MOVE32_F s2out2 :1
        ///	MOVE32_F s2out3 :2
        ///}.
        /// </summary>
        internal static string c_Sensor2 {
            get {
                return ResourceManager.GetString("c_Sensor2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: SENSOR3 ----------------------------------------------
        ///
        ///DATA32 s3out1
        ///DATA32 s3out2
        ///DATA32 s3out3
        ///
        ///init
        ///{
        ///	MOVE32_32 0 s3out1
        ///	MOVE32_32 0 s3out2
        ///	MOVE32_32 0 s3out3
        ///}
        ///
        ///inline SENSOR3.RAW1    // F
        ///{
        ///	INPUT_READEXT 0 2 0 -1 18 1 s3out1
        ///	MOVE32_F s3out1 :0
        ///}
        ///
        ///inline SENSOR3.RAW3    // FFFV
        ///{
        ///	INPUT_READEXT 0 2 0 -1 18 3 s3out1 s3out2 s3out3
        ///	MOVE32_F s3out1 :0
        ///	MOVE32_F s3out2 :1
        ///	MOVE32_F s3out3 :2
        ///}.
        /// </summary>
        internal static string c_Sensor3 {
            get {
                return ResourceManager.GetString("c_Sensor3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: SENSOR1 ----------------------------------------------
        ///
        ///DATA32 s4out1
        ///DATA32 s4out2
        ///DATA32 s4out3
        ///
        ///init
        ///{
        ///	MOVE32_32 0 s4out1
        ///	MOVE32_32 0 s4out2
        ///	MOVE32_32 0 s4out3
        ///}
        ///
        ///inline SENSOR4.RAW1    // F
        ///{
        ///	INPUT_READEXT 0 3 0 -1 18 1 s4out1
        ///	MOVE32_F s4out1 :0
        ///}
        ///
        ///inline SENSOR4.RAW3    // FFFV
        ///{
        ///	INPUT_READEXT 0 3 0 -1 18 3 s4out1 s4out2 s4out3
        ///	MOVE32_F s4out1 :0
        ///	MOVE32_F s4out2 :1
        ///	MOVE32_F s4out3 :2
        ///}.
        /// </summary>
        internal static string c_Sensor4 {
            get {
                return ResourceManager.GetString("c_Sensor4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: SPEAKER -------------------------------------------------
        ///
        ///inline SPEAKER.STOP      // V
        ///{
        ///	SOUND BREAK
        ///}
        ///
        ///subcall SPEAKER.TONE      // FFFV
        ///{
        ///	IN_F volume
        ///	IN_F tone
        ///	IN_F duration
        ///	
        ///	DATA8 vol
        ///	DATA16 tne
        ///	DATA16 dur
        ///	MOVEF_8 volume vol
        ///	MOVEF_16 tone tne
        ///	MOVEF_16 duration dur
        ///	
        ///	SOUND TONE vol tne dur
        ///}
        ///
        ///subcall SPEAKER.NOTE      // FSFV
        ///{
        ///	IN_F volume
        ///	IN_S note 8
        ///	IN_F duration
        ///	
        ///	DATA8 vol
        ///	DATA16 tne
        ///	DATA16 dur [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Speaker {
            get {
                return ResourceManager.GetString("c_Speaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ BASIC MODULE: TEXT ---------------------------------------------------
        ///
        ///subcall TEXT.APPEND     // SSS
        ///{
        ///	IN_S a 252
        ///	IN_S b 252
        ///    OUT_S result 252
        ///	
        ///	DATA16 len0
        ///	DATA16 len1
        ///	DATA16 sum
        ///
        ///	STRINGS GET_SIZE a len0
        ///	STRINGS GET_SIZE b len1
        ///	ADD16 len0,len1,sum
        ///	JR_GT16 sum,251,stringsizeexceeded
        ///
        ///	STRINGS ADD a b result
        ///	RETURN
        ///	
        ///stringsizeexceeded:	
        ///    STRINGS DUPLICATE a result
        ///}
        ///
        ///subcall TEXT.CONVERTTOLOWERCASE  // SS
        ///{
        ///	IN_S a 252 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Text {
            get {
                return ResourceManager.GetString("c_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // -------------------------------------- EXTENSION MODULE: THREAD --------------------------------------------
        ///
        ///ARRAY16 LOCKS 2           // Handle to byte-array for locking 
        ///                          // This array must only be created/extended by the subcall THREAD.CREATEMUTEX
        ///				  	      // Modification of individual elements must only be done by the subcall GETANDSETLOCK
        ///init
        ///{
        ///	ARRAY CREATE8 0 LOCKS
        ///}
        ///
        ///// This method uses the property of the VM, that a subcall can not be 
        ///// re-called by a  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Thread {
            get {
                return ResourceManager.GetString("c_Thread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // ------------------------------------------ EV3 MODULE: TIME -------------------------------------------------
        ///DATA32 timeMC1
        ///DATA32 timeMC2
        ///DATA32 timeMC3
        ///DATA32 timeMC4
        ///DATA32 timeMC5
        ///DATA32 timeMC6
        ///DATA32 timeMC7
        ///DATA32 timeMC8
        ///DATA32 timeMC9
        ///DATA32 timeMC1tmp
        ///DATA32 timeMC2tmp
        ///DATA32 timeMC3tmp
        ///DATA32 timeMC4tmp
        ///DATA32 timeMC5tmp
        ///DATA32 timeMC6tmp
        ///DATA32 timeMC7tmp
        ///DATA32 timeMC8tmp
        ///DATA32 timeMC9tmp
        ///
        ///init
        ///{
        ///	MOVE32_32 0 timeMC1
        ///	MOVE32_32 0 timeMC2
        ///	MOVE32_32 0 timeMC3
        ///	MOVE3 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Time {
            get {
                return ResourceManager.GetString("c_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // -------------------------------------- EXTENSION MODULE: VECTOR --------------------------------------------
        ///
        ///subcall VECTOR.INIT       // FFA
        ///{
        ///	IN_F size
        ///	IN_F value
        ///	IN_16 a
        ///
        ///	DATA32 size32
        ///	MOVEF_32 size size32
        ///	JR_LTEQ32 size32 0 empty
        ///
        ///	ARRAY RESIZE a size32
        ///	ARRAY FILL a value
        ///	RETURN
        ///
        ///empty:
        ///    ARRAY RESIZE a 0
        ///}
        ///
        ///subcall VECTOR.DATA       // FSA
        ///{
        ///	IN_F size
        ///	IN_S d 252
        ///	IN_16 a
        ///
        ///	DATA32 size32
        ///	MOVEF_32 size size32
        ///	JR_LTEQ32 size32 0 empty
        ///	ARRAY RESIZE a size32
        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string c_Vector {
            get {
                return ResourceManager.GetString("c_Vector", resourceCulture);
            }
        }
    }
}
